{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Preprocessing\n",
    "\n",
    "In niimpy, **preprocessing** referrs to common processing after loading a dataframe but before doing summary statistics or analysis.  Most of this is done using normal Pandas operations."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {},
   "outputs": [],
   "source": [
    "import niimpy\n",
    "df = niimpy.read_csv(niimpy.sampledata.MULTIUSER_AWAREBATTERY_CSV, tz='Europe/Helsinki')"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Extracting rows for only certain users"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>user</th>\n",
       "      <th>device</th>\n",
       "      <th>time</th>\n",
       "      <th>battery_level</th>\n",
       "      <th>battery_status</th>\n",
       "      <th>battery_health</th>\n",
       "      <th>battery_adaptor</th>\n",
       "      <th>datetime</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>2020-01-09 02:20:02.924999936+02:00</th>\n",
       "      <td>jd9INuQ5BBlW</td>\n",
       "      <td>3p83yASkOb_B</td>\n",
       "      <td>1.578529e+09</td>\n",
       "      <td>74</td>\n",
       "      <td>3</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>2020-01-09 02:20:02.924999936+02:00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2020-01-09 02:21:30.405999872+02:00</th>\n",
       "      <td>jd9INuQ5BBlW</td>\n",
       "      <td>3p83yASkOb_B</td>\n",
       "      <td>1.578529e+09</td>\n",
       "      <td>73</td>\n",
       "      <td>3</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>2020-01-09 02:21:30.405999872+02:00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2020-01-09 02:24:12.805999872+02:00</th>\n",
       "      <td>jd9INuQ5BBlW</td>\n",
       "      <td>3p83yASkOb_B</td>\n",
       "      <td>1.578529e+09</td>\n",
       "      <td>72</td>\n",
       "      <td>3</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>2020-01-09 02:24:12.805999872+02:00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2020-01-09 02:35:38.561000192+02:00</th>\n",
       "      <td>jd9INuQ5BBlW</td>\n",
       "      <td>3p83yASkOb_B</td>\n",
       "      <td>1.578530e+09</td>\n",
       "      <td>72</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>2020-01-09 02:35:38.561000192+02:00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2020-01-09 02:35:38.953000192+02:00</th>\n",
       "      <td>jd9INuQ5BBlW</td>\n",
       "      <td>3p83yASkOb_B</td>\n",
       "      <td>1.578530e+09</td>\n",
       "      <td>72</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>2020-01-09 02:35:38.953000192+02:00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2020-01-09 23:02:13.938999808+02:00</th>\n",
       "      <td>jd9INuQ5BBlW</td>\n",
       "      <td>OWd1Uau8POix</td>\n",
       "      <td>1.578604e+09</td>\n",
       "      <td>73</td>\n",
       "      <td>3</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>2020-01-09 23:02:13.938999808+02:00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2020-01-09 23:10:37.262000128+02:00</th>\n",
       "      <td>jd9INuQ5BBlW</td>\n",
       "      <td>OWd1Uau8POix</td>\n",
       "      <td>1.578604e+09</td>\n",
       "      <td>73</td>\n",
       "      <td>3</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>2020-01-09 23:10:37.262000128+02:00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2020-01-09 23:22:13.966000128+02:00</th>\n",
       "      <td>jd9INuQ5BBlW</td>\n",
       "      <td>OWd1Uau8POix</td>\n",
       "      <td>1.578605e+09</td>\n",
       "      <td>72</td>\n",
       "      <td>3</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>2020-01-09 23:22:13.966000128+02:00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2020-01-09 23:32:13.959000064+02:00</th>\n",
       "      <td>jd9INuQ5BBlW</td>\n",
       "      <td>OWd1Uau8POix</td>\n",
       "      <td>1.578606e+09</td>\n",
       "      <td>71</td>\n",
       "      <td>3</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>2020-01-09 23:32:13.959000064+02:00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2020-01-09 23:39:06.800000+02:00</th>\n",
       "      <td>jd9INuQ5BBlW</td>\n",
       "      <td>OWd1Uau8POix</td>\n",
       "      <td>1.578606e+09</td>\n",
       "      <td>71</td>\n",
       "      <td>3</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>2020-01-09 23:39:06.800000+02:00</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>373 rows Ã— 8 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "                                             user        device          time  \\\n",
       "2020-01-09 02:20:02.924999936+02:00  jd9INuQ5BBlW  3p83yASkOb_B  1.578529e+09   \n",
       "2020-01-09 02:21:30.405999872+02:00  jd9INuQ5BBlW  3p83yASkOb_B  1.578529e+09   \n",
       "2020-01-09 02:24:12.805999872+02:00  jd9INuQ5BBlW  3p83yASkOb_B  1.578529e+09   \n",
       "2020-01-09 02:35:38.561000192+02:00  jd9INuQ5BBlW  3p83yASkOb_B  1.578530e+09   \n",
       "2020-01-09 02:35:38.953000192+02:00  jd9INuQ5BBlW  3p83yASkOb_B  1.578530e+09   \n",
       "...                                           ...           ...           ...   \n",
       "2020-01-09 23:02:13.938999808+02:00  jd9INuQ5BBlW  OWd1Uau8POix  1.578604e+09   \n",
       "2020-01-09 23:10:37.262000128+02:00  jd9INuQ5BBlW  OWd1Uau8POix  1.578604e+09   \n",
       "2020-01-09 23:22:13.966000128+02:00  jd9INuQ5BBlW  OWd1Uau8POix  1.578605e+09   \n",
       "2020-01-09 23:32:13.959000064+02:00  jd9INuQ5BBlW  OWd1Uau8POix  1.578606e+09   \n",
       "2020-01-09 23:39:06.800000+02:00     jd9INuQ5BBlW  OWd1Uau8POix  1.578606e+09   \n",
       "\n",
       "                                     battery_level  battery_status  \\\n",
       "2020-01-09 02:20:02.924999936+02:00             74               3   \n",
       "2020-01-09 02:21:30.405999872+02:00             73               3   \n",
       "2020-01-09 02:24:12.805999872+02:00             72               3   \n",
       "2020-01-09 02:35:38.561000192+02:00             72               2   \n",
       "2020-01-09 02:35:38.953000192+02:00             72               2   \n",
       "...                                            ...             ...   \n",
       "2020-01-09 23:02:13.938999808+02:00             73               3   \n",
       "2020-01-09 23:10:37.262000128+02:00             73               3   \n",
       "2020-01-09 23:22:13.966000128+02:00             72               3   \n",
       "2020-01-09 23:32:13.959000064+02:00             71               3   \n",
       "2020-01-09 23:39:06.800000+02:00                71               3   \n",
       "\n",
       "                                     battery_health  battery_adaptor  \\\n",
       "2020-01-09 02:20:02.924999936+02:00               2                0   \n",
       "2020-01-09 02:21:30.405999872+02:00               2                0   \n",
       "2020-01-09 02:24:12.805999872+02:00               2                0   \n",
       "2020-01-09 02:35:38.561000192+02:00               2                0   \n",
       "2020-01-09 02:35:38.953000192+02:00               2                2   \n",
       "...                                             ...              ...   \n",
       "2020-01-09 23:02:13.938999808+02:00               2                0   \n",
       "2020-01-09 23:10:37.262000128+02:00               2                0   \n",
       "2020-01-09 23:22:13.966000128+02:00               2                0   \n",
       "2020-01-09 23:32:13.959000064+02:00               2                0   \n",
       "2020-01-09 23:39:06.800000+02:00                  2                0   \n",
       "\n",
       "                                                               datetime  \n",
       "2020-01-09 02:20:02.924999936+02:00 2020-01-09 02:20:02.924999936+02:00  \n",
       "2020-01-09 02:21:30.405999872+02:00 2020-01-09 02:21:30.405999872+02:00  \n",
       "2020-01-09 02:24:12.805999872+02:00 2020-01-09 02:24:12.805999872+02:00  \n",
       "2020-01-09 02:35:38.561000192+02:00 2020-01-09 02:35:38.561000192+02:00  \n",
       "2020-01-09 02:35:38.953000192+02:00 2020-01-09 02:35:38.953000192+02:00  \n",
       "...                                                                 ...  \n",
       "2020-01-09 23:02:13.938999808+02:00 2020-01-09 23:02:13.938999808+02:00  \n",
       "2020-01-09 23:10:37.262000128+02:00 2020-01-09 23:10:37.262000128+02:00  \n",
       "2020-01-09 23:22:13.966000128+02:00 2020-01-09 23:22:13.966000128+02:00  \n",
       "2020-01-09 23:32:13.959000064+02:00 2020-01-09 23:32:13.959000064+02:00  \n",
       "2020-01-09 23:39:06.800000+02:00       2020-01-09 23:39:06.800000+02:00  \n",
       "\n",
       "[373 rows x 8 columns]"
      ]
     },
     "execution_count": 2,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df[df['user'] == 'jd9INuQ5BBlW']"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Extracting rows for a certain time range"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>user</th>\n",
       "      <th>device</th>\n",
       "      <th>time</th>\n",
       "      <th>battery_level</th>\n",
       "      <th>battery_status</th>\n",
       "      <th>battery_health</th>\n",
       "      <th>battery_adaptor</th>\n",
       "      <th>datetime</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>2020-01-09 10:03:23.898000128+02:00</th>\n",
       "      <td>jd9INuQ5BBlW</td>\n",
       "      <td>3p83yASkOb_B</td>\n",
       "      <td>1.578557e+09</td>\n",
       "      <td>100</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>2020-01-09 10:03:23.898000128+02:00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2020-01-09 10:03:33.844999936+02:00</th>\n",
       "      <td>jd9INuQ5BBlW</td>\n",
       "      <td>3p83yASkOb_B</td>\n",
       "      <td>1.578557e+09</td>\n",
       "      <td>100</td>\n",
       "      <td>5</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>2020-01-09 10:03:33.844999936+02:00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2020-01-09 10:13:34.990000128+02:00</th>\n",
       "      <td>jd9INuQ5BBlW</td>\n",
       "      <td>OWd1Uau8POix</td>\n",
       "      <td>1.578558e+09</td>\n",
       "      <td>100</td>\n",
       "      <td>5</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>2020-01-09 10:13:34.990000128+02:00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2020-01-09 10:27:35.035000064+02:00</th>\n",
       "      <td>jd9INuQ5BBlW</td>\n",
       "      <td>OWd1Uau8POix</td>\n",
       "      <td>1.578558e+09</td>\n",
       "      <td>100</td>\n",
       "      <td>5</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>2020-01-09 10:27:35.035000064+02:00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2020-01-09 10:42:35.010999808+02:00</th>\n",
       "      <td>jd9INuQ5BBlW</td>\n",
       "      <td>OWd1Uau8POix</td>\n",
       "      <td>1.578559e+09</td>\n",
       "      <td>100</td>\n",
       "      <td>5</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>2020-01-09 10:42:35.010999808+02:00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2020-01-09 23:02:13.938999808+02:00</th>\n",
       "      <td>jd9INuQ5BBlW</td>\n",
       "      <td>OWd1Uau8POix</td>\n",
       "      <td>1.578604e+09</td>\n",
       "      <td>73</td>\n",
       "      <td>3</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>2020-01-09 23:02:13.938999808+02:00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2020-01-09 23:10:37.262000128+02:00</th>\n",
       "      <td>jd9INuQ5BBlW</td>\n",
       "      <td>OWd1Uau8POix</td>\n",
       "      <td>1.578604e+09</td>\n",
       "      <td>73</td>\n",
       "      <td>3</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>2020-01-09 23:10:37.262000128+02:00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2020-01-09 23:22:13.966000128+02:00</th>\n",
       "      <td>jd9INuQ5BBlW</td>\n",
       "      <td>OWd1Uau8POix</td>\n",
       "      <td>1.578605e+09</td>\n",
       "      <td>72</td>\n",
       "      <td>3</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>2020-01-09 23:22:13.966000128+02:00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2020-01-09 23:32:13.959000064+02:00</th>\n",
       "      <td>jd9INuQ5BBlW</td>\n",
       "      <td>OWd1Uau8POix</td>\n",
       "      <td>1.578606e+09</td>\n",
       "      <td>71</td>\n",
       "      <td>3</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>2020-01-09 23:32:13.959000064+02:00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2020-01-09 23:39:06.800000+02:00</th>\n",
       "      <td>jd9INuQ5BBlW</td>\n",
       "      <td>OWd1Uau8POix</td>\n",
       "      <td>1.578606e+09</td>\n",
       "      <td>71</td>\n",
       "      <td>3</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>2020-01-09 23:39:06.800000+02:00</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>80 rows Ã— 8 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "                                             user        device          time  \\\n",
       "2020-01-09 10:03:23.898000128+02:00  jd9INuQ5BBlW  3p83yASkOb_B  1.578557e+09   \n",
       "2020-01-09 10:03:33.844999936+02:00  jd9INuQ5BBlW  3p83yASkOb_B  1.578557e+09   \n",
       "2020-01-09 10:13:34.990000128+02:00  jd9INuQ5BBlW  OWd1Uau8POix  1.578558e+09   \n",
       "2020-01-09 10:27:35.035000064+02:00  jd9INuQ5BBlW  OWd1Uau8POix  1.578558e+09   \n",
       "2020-01-09 10:42:35.010999808+02:00  jd9INuQ5BBlW  OWd1Uau8POix  1.578559e+09   \n",
       "...                                           ...           ...           ...   \n",
       "2020-01-09 23:02:13.938999808+02:00  jd9INuQ5BBlW  OWd1Uau8POix  1.578604e+09   \n",
       "2020-01-09 23:10:37.262000128+02:00  jd9INuQ5BBlW  OWd1Uau8POix  1.578604e+09   \n",
       "2020-01-09 23:22:13.966000128+02:00  jd9INuQ5BBlW  OWd1Uau8POix  1.578605e+09   \n",
       "2020-01-09 23:32:13.959000064+02:00  jd9INuQ5BBlW  OWd1Uau8POix  1.578606e+09   \n",
       "2020-01-09 23:39:06.800000+02:00     jd9INuQ5BBlW  OWd1Uau8POix  1.578606e+09   \n",
       "\n",
       "                                     battery_level  battery_status  \\\n",
       "2020-01-09 10:03:23.898000128+02:00            100               2   \n",
       "2020-01-09 10:03:33.844999936+02:00            100               5   \n",
       "2020-01-09 10:13:34.990000128+02:00            100               5   \n",
       "2020-01-09 10:27:35.035000064+02:00            100               5   \n",
       "2020-01-09 10:42:35.010999808+02:00            100               5   \n",
       "...                                            ...             ...   \n",
       "2020-01-09 23:02:13.938999808+02:00             73               3   \n",
       "2020-01-09 23:10:37.262000128+02:00             73               3   \n",
       "2020-01-09 23:22:13.966000128+02:00             72               3   \n",
       "2020-01-09 23:32:13.959000064+02:00             71               3   \n",
       "2020-01-09 23:39:06.800000+02:00                71               3   \n",
       "\n",
       "                                     battery_health  battery_adaptor  \\\n",
       "2020-01-09 10:03:23.898000128+02:00               2                2   \n",
       "2020-01-09 10:03:33.844999936+02:00               2                2   \n",
       "2020-01-09 10:13:34.990000128+02:00               2                1   \n",
       "2020-01-09 10:27:35.035000064+02:00               2                1   \n",
       "2020-01-09 10:42:35.010999808+02:00               2                1   \n",
       "...                                             ...              ...   \n",
       "2020-01-09 23:02:13.938999808+02:00               2                0   \n",
       "2020-01-09 23:10:37.262000128+02:00               2                0   \n",
       "2020-01-09 23:22:13.966000128+02:00               2                0   \n",
       "2020-01-09 23:32:13.959000064+02:00               2                0   \n",
       "2020-01-09 23:39:06.800000+02:00                  2                0   \n",
       "\n",
       "                                                               datetime  \n",
       "2020-01-09 10:03:23.898000128+02:00 2020-01-09 10:03:23.898000128+02:00  \n",
       "2020-01-09 10:03:33.844999936+02:00 2020-01-09 10:03:33.844999936+02:00  \n",
       "2020-01-09 10:13:34.990000128+02:00 2020-01-09 10:13:34.990000128+02:00  \n",
       "2020-01-09 10:27:35.035000064+02:00 2020-01-09 10:27:35.035000064+02:00  \n",
       "2020-01-09 10:42:35.010999808+02:00 2020-01-09 10:42:35.010999808+02:00  \n",
       "...                                                                 ...  \n",
       "2020-01-09 23:02:13.938999808+02:00 2020-01-09 23:02:13.938999808+02:00  \n",
       "2020-01-09 23:10:37.262000128+02:00 2020-01-09 23:10:37.262000128+02:00  \n",
       "2020-01-09 23:22:13.966000128+02:00 2020-01-09 23:22:13.966000128+02:00  \n",
       "2020-01-09 23:32:13.959000064+02:00 2020-01-09 23:32:13.959000064+02:00  \n",
       "2020-01-09 23:39:06.800000+02:00       2020-01-09 23:39:06.800000+02:00  \n",
       "\n",
       "[80 rows x 8 columns]"
      ]
     },
     "execution_count": 3,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df[df.index > '2020-01-09 10:00']"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>user</th>\n",
       "      <th>device</th>\n",
       "      <th>time</th>\n",
       "      <th>battery_level</th>\n",
       "      <th>battery_status</th>\n",
       "      <th>battery_health</th>\n",
       "      <th>battery_adaptor</th>\n",
       "      <th>datetime</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>2020-01-09 10:03:23.898000128+02:00</th>\n",
       "      <td>jd9INuQ5BBlW</td>\n",
       "      <td>3p83yASkOb_B</td>\n",
       "      <td>1.578557e+09</td>\n",
       "      <td>100</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>2020-01-09 10:03:23.898000128+02:00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2020-01-09 10:03:33.844999936+02:00</th>\n",
       "      <td>jd9INuQ5BBlW</td>\n",
       "      <td>3p83yASkOb_B</td>\n",
       "      <td>1.578557e+09</td>\n",
       "      <td>100</td>\n",
       "      <td>5</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>2020-01-09 10:03:33.844999936+02:00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2020-01-09 10:13:34.990000128+02:00</th>\n",
       "      <td>jd9INuQ5BBlW</td>\n",
       "      <td>OWd1Uau8POix</td>\n",
       "      <td>1.578558e+09</td>\n",
       "      <td>100</td>\n",
       "      <td>5</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>2020-01-09 10:13:34.990000128+02:00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2020-01-09 10:27:35.035000064+02:00</th>\n",
       "      <td>jd9INuQ5BBlW</td>\n",
       "      <td>OWd1Uau8POix</td>\n",
       "      <td>1.578558e+09</td>\n",
       "      <td>100</td>\n",
       "      <td>5</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>2020-01-09 10:27:35.035000064+02:00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2020-01-09 10:42:35.010999808+02:00</th>\n",
       "      <td>jd9INuQ5BBlW</td>\n",
       "      <td>OWd1Uau8POix</td>\n",
       "      <td>1.578559e+09</td>\n",
       "      <td>100</td>\n",
       "      <td>5</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>2020-01-09 10:42:35.010999808+02:00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2020-01-09 10:57:35.044000+02:00</th>\n",
       "      <td>jd9INuQ5BBlW</td>\n",
       "      <td>OWd1Uau8POix</td>\n",
       "      <td>1.578560e+09</td>\n",
       "      <td>100</td>\n",
       "      <td>5</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>2020-01-09 10:57:35.044000+02:00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2020-01-09 10:58:25.058000128+02:00</th>\n",
       "      <td>jd9INuQ5BBlW</td>\n",
       "      <td>OWd1Uau8POix</td>\n",
       "      <td>1.578560e+09</td>\n",
       "      <td>100</td>\n",
       "      <td>3</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>2020-01-09 10:58:25.058000128+02:00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2020-01-09 11:07:43.846999808+02:00</th>\n",
       "      <td>jd9INuQ5BBlW</td>\n",
       "      <td>OWd1Uau8POix</td>\n",
       "      <td>1.578561e+09</td>\n",
       "      <td>99</td>\n",
       "      <td>3</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>2020-01-09 11:07:43.846999808+02:00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2020-01-09 11:28:24.970000128+02:00</th>\n",
       "      <td>jd9INuQ5BBlW</td>\n",
       "      <td>OWd1Uau8POix</td>\n",
       "      <td>1.578562e+09</td>\n",
       "      <td>98</td>\n",
       "      <td>3</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>2020-01-09 11:28:24.970000128+02:00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2020-01-09 11:48:24.966000128+02:00</th>\n",
       "      <td>jd9INuQ5BBlW</td>\n",
       "      <td>OWd1Uau8POix</td>\n",
       "      <td>1.578563e+09</td>\n",
       "      <td>97</td>\n",
       "      <td>3</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>2020-01-09 11:48:24.966000128+02:00</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                                             user        device          time  \\\n",
       "2020-01-09 10:03:23.898000128+02:00  jd9INuQ5BBlW  3p83yASkOb_B  1.578557e+09   \n",
       "2020-01-09 10:03:33.844999936+02:00  jd9INuQ5BBlW  3p83yASkOb_B  1.578557e+09   \n",
       "2020-01-09 10:13:34.990000128+02:00  jd9INuQ5BBlW  OWd1Uau8POix  1.578558e+09   \n",
       "2020-01-09 10:27:35.035000064+02:00  jd9INuQ5BBlW  OWd1Uau8POix  1.578558e+09   \n",
       "2020-01-09 10:42:35.010999808+02:00  jd9INuQ5BBlW  OWd1Uau8POix  1.578559e+09   \n",
       "2020-01-09 10:57:35.044000+02:00     jd9INuQ5BBlW  OWd1Uau8POix  1.578560e+09   \n",
       "2020-01-09 10:58:25.058000128+02:00  jd9INuQ5BBlW  OWd1Uau8POix  1.578560e+09   \n",
       "2020-01-09 11:07:43.846999808+02:00  jd9INuQ5BBlW  OWd1Uau8POix  1.578561e+09   \n",
       "2020-01-09 11:28:24.970000128+02:00  jd9INuQ5BBlW  OWd1Uau8POix  1.578562e+09   \n",
       "2020-01-09 11:48:24.966000128+02:00  jd9INuQ5BBlW  OWd1Uau8POix  1.578563e+09   \n",
       "\n",
       "                                     battery_level  battery_status  \\\n",
       "2020-01-09 10:03:23.898000128+02:00            100               2   \n",
       "2020-01-09 10:03:33.844999936+02:00            100               5   \n",
       "2020-01-09 10:13:34.990000128+02:00            100               5   \n",
       "2020-01-09 10:27:35.035000064+02:00            100               5   \n",
       "2020-01-09 10:42:35.010999808+02:00            100               5   \n",
       "2020-01-09 10:57:35.044000+02:00               100               5   \n",
       "2020-01-09 10:58:25.058000128+02:00            100               3   \n",
       "2020-01-09 11:07:43.846999808+02:00             99               3   \n",
       "2020-01-09 11:28:24.970000128+02:00             98               3   \n",
       "2020-01-09 11:48:24.966000128+02:00             97               3   \n",
       "\n",
       "                                     battery_health  battery_adaptor  \\\n",
       "2020-01-09 10:03:23.898000128+02:00               2                2   \n",
       "2020-01-09 10:03:33.844999936+02:00               2                2   \n",
       "2020-01-09 10:13:34.990000128+02:00               2                1   \n",
       "2020-01-09 10:27:35.035000064+02:00               2                1   \n",
       "2020-01-09 10:42:35.010999808+02:00               2                1   \n",
       "2020-01-09 10:57:35.044000+02:00                  2                1   \n",
       "2020-01-09 10:58:25.058000128+02:00               2                0   \n",
       "2020-01-09 11:07:43.846999808+02:00               2                0   \n",
       "2020-01-09 11:28:24.970000128+02:00               2                0   \n",
       "2020-01-09 11:48:24.966000128+02:00               2                0   \n",
       "\n",
       "                                                               datetime  \n",
       "2020-01-09 10:03:23.898000128+02:00 2020-01-09 10:03:23.898000128+02:00  \n",
       "2020-01-09 10:03:33.844999936+02:00 2020-01-09 10:03:33.844999936+02:00  \n",
       "2020-01-09 10:13:34.990000128+02:00 2020-01-09 10:13:34.990000128+02:00  \n",
       "2020-01-09 10:27:35.035000064+02:00 2020-01-09 10:27:35.035000064+02:00  \n",
       "2020-01-09 10:42:35.010999808+02:00 2020-01-09 10:42:35.010999808+02:00  \n",
       "2020-01-09 10:57:35.044000+02:00       2020-01-09 10:57:35.044000+02:00  \n",
       "2020-01-09 10:58:25.058000128+02:00 2020-01-09 10:58:25.058000128+02:00  \n",
       "2020-01-09 11:07:43.846999808+02:00 2020-01-09 11:07:43.846999808+02:00  \n",
       "2020-01-09 11:28:24.970000128+02:00 2020-01-09 11:28:24.970000128+02:00  \n",
       "2020-01-09 11:48:24.966000128+02:00 2020-01-09 11:48:24.966000128+02:00  "
      ]
     },
     "execution_count": 4,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df[('2020-01-09 10:00' < df.index) & (df.index < '2020-01-09 12:00')]"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Timestamps of all data\n",
    "\n",
    "The timestamps of the data is contained in the index:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "DatetimeIndex(['2020-01-09 02:20:02.924999936+02:00',\n",
       "               '2020-01-09 02:21:30.405999872+02:00',\n",
       "               '2020-01-09 02:24:12.805999872+02:00',\n",
       "               '2020-01-09 02:35:38.561000192+02:00',\n",
       "               '2020-01-09 02:35:38.953000192+02:00',\n",
       "               '2020-01-09 02:37:13.282000128+02:00',\n",
       "               '2020-01-09 02:37:28.365999872+02:00',\n",
       "               '2020-01-09 02:37:33.743000064+02:00',\n",
       "               '2020-01-09 02:41:02.887000064+02:00',\n",
       "               '2020-01-09 02:41:45.263000064+02:00',\n",
       "               ...\n",
       "                  '2020-01-09 21:45:01.372000+02:00',\n",
       "               '2020-01-09 21:52:43.584999936+02:00',\n",
       "               '2020-01-09 22:12:13.954999808+02:00',\n",
       "               '2020-01-09 22:21:04.062000128+02:00',\n",
       "               '2020-01-09 22:42:13.961999872+02:00',\n",
       "               '2020-01-09 23:02:13.938999808+02:00',\n",
       "               '2020-01-09 23:10:37.262000128+02:00',\n",
       "               '2020-01-09 23:22:13.966000128+02:00',\n",
       "               '2020-01-09 23:32:13.959000064+02:00',\n",
       "                  '2020-01-09 23:39:06.800000+02:00'],\n",
       "              dtype='datetime64[ns, Europe/Helsinki]', length=373, freq=None)"
      ]
     },
     "execution_count": 5,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.index"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Get the first or last timestamps"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Timestamp('2020-01-09 02:02:26.104999936+0200', tz='Europe/Helsinki')"
      ]
     },
     "execution_count": 6,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "min(df.index)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Timestamp('2020-01-09 23:39:06.800000+0200', tz='Europe/Helsinki')"
      ]
     },
     "execution_count": 7,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "max(df.index)"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.9.2"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 4
}
